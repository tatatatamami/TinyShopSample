@page "/products"
@using DataEntities
@using Store.Services
@inject ProductService ProductService
@inject IConfiguration Configuration
@attribute [StreamRendering(true)]

<PageTitle>Products</PageTitle>

<h1>Products</h1>

<p>Here are some of our amazing outdoor products that you can purchase.</p>

@if (products == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Image</th>
                <th>Name</th>
                <th>Price</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in products)
            {
                <tr>
                    <td>
                        <img src="@imagePrefix/images/@product.ImageUrl" alt="@product.Name" width="80" height="80" />
                    </td>
                    <td>@product.Name</td>
                    <td>@product.Price</td>
                    <td>@product.Description</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Product>? products;
    private string imagePrefix = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        // Simulate asynchronous loading to demonstrate streaming rendering
        await Task.Delay(500);
        imagePrefix = Configuration["ImagePrefix"]!;
        products = await ProductService.GetProducts();
    }

}
